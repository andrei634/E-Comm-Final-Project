@using Microsoft.AspNetCore.Identity
@using E_commerce.Controllers
@inject ProductCartController ProductCartController
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole("User"))
    {
        <li class="nav-item position-relative">
            <a class="nav-link text-dark" asp-area="" asp-controller="ProductCart" asp-action="Index"><ion-icon name="cart-outline" class="shopping-cart-icon"></ion-icon></a>
            @if(User.Identity.IsAuthenticated)
            {
                @if(ProductCartController.GetAllProductCarts(User.Identity.Name.ToString()).ToArray().Length > 0)
                {
                    <div class="cart-notification">@ProductCartController.GetAllProductCarts(User.Identity.Name.ToString()).ToArray().Length</div>
                }            
            }             
        </li>
    }
    <li class="nav-item">
        <a  class="nav-link text-dark color-nav-items" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark color-nav-items">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark color-nav-items" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark color-nav-items" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
